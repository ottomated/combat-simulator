webpackHotUpdate_N_E(1,{

/***/ "./src/components/Canvas.tsx":
/*!***********************************!*\
  !*** ./src/components/Canvas.tsx ***!
  \***********************************/
/*! exports provided: getCanvasScalar, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCanvasScalar\", function() { return getCanvasScalar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Canvas; });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hooks */ \"./src/hooks.tsx\");\n/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @material-ui/core */ \"./node_modules/@material-ui/core/esm/index.js\");\n/* harmony import */ var _material_ui_lab__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @material-ui/lab */ \"./node_modules/@material-ui/lab/esm/index.js\");\n/* harmony import */ var _material_ui_icons_CreateOutlined__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @material-ui/icons/CreateOutlined */ \"./node_modules/@material-ui/icons/CreateOutlined.js\");\n/* harmony import */ var _material_ui_icons_CreateOutlined__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_CreateOutlined__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _material_ui_icons_FormatColorFillOutlined__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @material-ui/icons/FormatColorFillOutlined */ \"./node_modules/@material-ui/icons/FormatColorFillOutlined.js\");\n/* harmony import */ var _material_ui_icons_FormatColorFillOutlined__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_FormatColorFillOutlined__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var mdi_material_ui_Eraser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! mdi-material-ui/Eraser */ \"./node_modules/mdi-material-ui/Eraser.js\");\n/* harmony import */ var mdi_material_ui_Eraser__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(mdi_material_ui_Eraser__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _material_ui_icons_FilterHdrOutlined__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @material-ui/icons/FilterHdrOutlined */ \"./node_modules/@material-ui/icons/FilterHdrOutlined.js\");\n/* harmony import */ var _material_ui_icons_FilterHdrOutlined__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_FilterHdrOutlined__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _material_ui_icons_BlurOn__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @material-ui/icons/BlurOn */ \"./node_modules/@material-ui/icons/BlurOn.js\");\n/* harmony import */ var _material_ui_icons_BlurOn__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_BlurOn__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var mdi_material_ui_Waves__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! mdi-material-ui/Waves */ \"./node_modules/mdi-material-ui/Waves.js\");\n/* harmony import */ var mdi_material_ui_Waves__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(mdi_material_ui_Waves__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var mdi_material_ui_Grass__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! mdi-material-ui/Grass */ \"./node_modules/mdi-material-ui/Grass.js\");\n/* harmony import */ var mdi_material_ui_Grass__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(mdi_material_ui_Grass__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _pages__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../pages */ \"./pages/index.tsx\");\n\n\n\nvar _jsxFileName = \"/home/otto/Projects/Node/5e/src/components/Canvas.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar WIDTH = 192;\nvar HEIGHT = 108; // const ScaleSlider = withStyles((theme) => ({\n// \troot: {\n// \t\tmargin: theme.spacing(1)\n// \t},\n// \tthumb: {\n// \t\twidth: 2,\n// \t\tborderRadius: 0,\n// \t\theight: 20,\n// \t\tmarginLeft: 0,\n// \t\t'&:focus, &:hover': {\n// \t\t\tboxShadow: 'inherit',\n// \t\t}\n// \t},\n// \ttrack: {\n// \t\tdisplay: 'none'\n// \t},\n// \trail: {\n// \t\tbottom: 0\n// \t}\n// }))(Slider);\n\nvar useStyles = Object(_material_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"makeStyles\"])(function (theme) {\n  return {\n    canvas: {\n      width: '100%',\n      height: '100%',\n      background: theme.palette.background[\"default\"] // cursor: 'none'\n\n    },\n    toolbar: {\n      position: 'absolute',\n      right: theme.spacing(2),\n      top: 64 + theme.spacing(2)\n    },\n    scaleIndicator: {\n      position: 'absolute',\n      right: theme.spacing(2),\n      bottom: theme.spacing(2),\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: 200,\n      height: 56,\n      paddingLeft: theme.spacing(2),\n      '&>p': {\n        whiteSpace: 'nowrap',\n        fontSize: 12\n      }\n    },\n    slider: {\n      marginRight: theme.spacing(1),\n      marginLeft: theme.spacing(1)\n    },\n    contextMenu: {\n      padding: theme.spacing(2)\n    },\n    thirtyFootIndicator: {\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      transform: 'translate(-50%, -50%)',\n      borderTopColor: 'transparent',\n      borderLeftColor: 'black',\n      borderRightColor: 'black',\n      borderBottomColor: 'black',\n      color: 'black',\n      textAlign: 'center',\n      borderStyle: 'solid',\n      borderWidth: 2\n    }\n  };\n});\nfunction getCanvasScalar(width, height) {\n  var widthScalar = width / WIDTH;\n  var heightScalar = height / HEIGHT;\n  var scalar,\n      xOffset = 0,\n      yOffset = 0;\n\n  if (WIDTH * heightScalar > width) {\n    scalar = widthScalar;\n    yOffset = (height - HEIGHT * widthScalar) / 2;\n  } else {\n    scalar = heightScalar;\n    xOffset = (width - WIDTH * heightScalar) / 2;\n  }\n\n  return {\n    xOffset: xOffset,\n    scalar: scalar,\n    yOffset: yOffset\n  };\n}\nfunction Canvas() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useRefState = Object(_hooks__WEBPACK_IMPORTED_MODULE_3__[\"useRefState\"])(Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useContext\"])(_pages__WEBPACK_IMPORTED_MODULE_13__[\"UserData\"])),\n      _useRefState2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_useRefState, 2),\n      data = _useRefState2[0],\n      setData = _useRefState2[1];\n\n  var context = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useRef\"])(null);\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(-1),\n      tempScale = _useState[0],\n      setTempScale = _useState[1];\n\n  var _useMeasure = Object(_hooks__WEBPACK_IMPORTED_MODULE_3__[\"useMeasure\"])(),\n      _useMeasure2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_useMeasure, 2),\n      bind = _useMeasure2[0],\n      _useMeasure2$ = _useMeasure2[1],\n      width = _useMeasure2$.width,\n      height = _useMeasure2$.height;\n\n  var canvas = bind.ref.current;\n  var mouse = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useRef\"])({\n    x: 0,\n    y: 0,\n    lastX: 0,\n    lastY: 0,\n    justClicked: false,\n    down: false\n  });\n  var map = data.current.entries[data.current.selectedIndex];\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    var _data$current$entries;\n\n    if (canvas === null) return;\n\n    function floodFill(localCtx, x, y, fillColor) {\n      var DEBUG = false;\n\n      function getPixel(pixelData, x, y) {\n        if (x < 0 || y < 0 || x >= pixelData.width || y >= pixelData.height) {\n          return -1; // impossible color\n        } else {\n          return pixelData.data[y * pixelData.width + x];\n        }\n      } // read the pixels in the canvas\n\n\n      var imageData = localCtx.getImageData(0, 0, WIDTH, HEIGHT); // make a Uint32Array view on the pixels so we can manipulate pixels\n      // one 32bit value at a time instead of as 4 bytes per pixel\n\n      var pixelData = {\n        width: imageData.width,\n        height: imageData.height,\n        data: new Uint32Array(imageData.data.buffer)\n      }; // get the color we're filling fuck mkby\n\n      var targetColor = getPixel(pixelData, x, y);\n\n      var getColorValues = function getColorValues(color) {\n        var r = color & 0xff;\n        var g = color >> 8 & 0xff;\n        var b = color >> 16 & 0xff;\n        return [r, g, b];\n      };\n\n      var pixelDifferences = function pixelDifferences(color1, color2) {\n        var _getColorValues = getColorValues(color1),\n            _getColorValues2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_getColorValues, 3),\n            r1 = _getColorValues2[0],\n            g1 = _getColorValues2[1],\n            b1 = _getColorValues2[2];\n\n        var _getColorValues3 = getColorValues(color2),\n            _getColorValues4 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_getColorValues3, 3),\n            r2 = _getColorValues4[0],\n            g2 = _getColorValues4[1],\n            b2 = _getColorValues4[2];\n\n        return [r1 - r2, g1 - g2, b1 - b2];\n      };\n\n      var pixelsMatch = function pixelsMatch(_ref) {\n        var _ref2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_ref, 3),\n            rd = _ref2[0],\n            gd = _ref2[1],\n            bd = _ref2[2];\n\n        var THRESHOLD = 0xff * 0.05;\n        return Math.abs(rd) < THRESHOLD && Math.abs(bd) < THRESHOLD && Math.abs(gd) < THRESHOLD;\n      };\n\n      var getCss = function getCss(color) {\n        var appendPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var str = color.toString(16);\n        return (appendPrefix ? 'color: ' : '') + '#' + str.substring(6, 8) + str.substring(4, 6) + str.substring(2, 4);\n      };\n\n      function lerp(a, b, u) {\n        return (1 - u) * a + u * b;\n      }\n\n      var blend = function blend(color, _ref3, opacity) {\n        var _ref4 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_ref3, 3),\n            r2 = _ref4[0],\n            g2 = _ref4[1],\n            b2 = _ref4[2];\n\n        var _getColorValues5 = getColorValues(color),\n            _getColorValues6 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_getColorValues5, 3),\n            r1 = _getColorValues6[0],\n            g1 = _getColorValues6[1],\n            b1 = _getColorValues6[2];\n\n        var newR = lerp(r1, r2, opacity);\n        var newG = lerp(g1, g2, opacity);\n        var newB = lerp(b1, b2, opacity);\n        return newR + (newG << 8) + (newB << 16) + 0xff000000;\n      };\n\n      var checkedPixels = new Set();\n      var NEIGHBORS = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 0], [0, 1], [1, -1], [1, 0], [1, 1]]; // check we are actually filling a different color\n\n      var colorsToSet = [];\n\n      if (targetColor !== fillColor) {\n        var pixelsToCheck = [x, y];\n\n        while (pixelsToCheck.length > 0) {\n          var _y = pixelsToCheck.pop();\n\n          var _x = pixelsToCheck.pop();\n\n          if (checkedPixels.has(_x + \" \" + _y)) continue;\n          checkedPixels.add(_x + \" \" + _y);\n          var oldColor = getPixel(pixelData, _x, _y);\n          var diffs = pixelDifferences(oldColor, targetColor);\n          var matches = pixelsMatch(diffs); // console.log(oldColor.toString(16), targetColor.toString(16), diffs);\n\n          if (matches) {\n            colorsToSet.push({\n              x: _x,\n              y: _y,\n              color: fillColor\n            });\n            if (_x < pixelData.width - 1) pixelsToCheck.push(_x + 1, _y);\n            if (_x > 0) pixelsToCheck.push(_x - 1, _y);\n            if (_y < pixelData.height - 1) pixelsToCheck.push(_x, _y + 1);\n            if (_y > 0) pixelsToCheck.push(_x, _y - 1);\n          } else {\n            if (DEBUG) console.log(\"Filling %c\\u2588\".concat(oldColor.toString(16), \" at (\").concat(_x, \", \").concat(_y, \") with %c\\u2588\").concat(fillColor.toString(16)), getCss(oldColor), getCss(fillColor));\n            var max = 0;\n            var indexOfMaxDifference = 0;\n\n            for (var i = 0; i < NEIGHBORS.length; i++) {\n              var nearby = NEIGHBORS[i];\n              var nx = _x + nearby[0],\n                  ny = _y + nearby[1];\n              if (nx < 0 || nx > pixelData.width - 1 || ny < 0 || ny > pixelData.height - 1) continue;\n\n              var _diffs = pixelDifferences(getPixel(pixelData, nx, ny), targetColor);\n\n              if (DEBUG) console.log(\"Diffs\", _diffs);\n              var averageDiff = _diffs.reduce(function (a, b) {\n                return a + Math.abs(b);\n              }, 0) / 3;\n\n              if (averageDiff > max) {\n                max = averageDiff;\n                indexOfMaxDifference = i;\n              }\n            }\n\n            if (DEBUG) console.log(\"Neighbor of max difference:\", NEIGHBORS[indexOfMaxDifference], getPixel(pixelData, _x + NEIGHBORS[indexOfMaxDifference][0], _y + NEIGHBORS[indexOfMaxDifference][1]).toString(16), targetColor.toString(16));\n            var predictedOriginalColor = getPixel(pixelData, _x + NEIGHBORS[indexOfMaxDifference][0], _y + NEIGHBORS[indexOfMaxDifference][1]);\n            var colorDifferences = pixelDifferences(predictedOriginalColor, targetColor);\n            var targetColorChannels = getColorValues(targetColor);\n            var transparentColorChannels = getColorValues(oldColor);\n            var originalColorChannels = getColorValues(predictedOriginalColor);\n            var predictedOpacity = 0;\n\n            for (var _i = 0; _i < 3; _i++) {\n              predictedOpacity += (transparentColorChannels[_i] - targetColorChannels[_i]) / colorDifferences[_i];\n            }\n\n            predictedOpacity /= 3;\n            predictedOpacity = Math.max(0, Math.min(1, predictedOpacity));\n            if (DEBUG) console.log(\"Base: %c\\u2588\".concat(targetColor.toString(16), \" Line Color: %c\\u2588\").concat(predictedOriginalColor.toString(16), \" Opacity: \").concat(predictedOpacity), getCss(targetColor), getCss(predictedOriginalColor));\n            var blended = blend(fillColor, originalColorChannels, predictedOpacity);\n            if (DEBUG) console.log(\"Blended color: %c\".concat(blended.toString(16)), getCss(blended));\n            colorsToSet.push({\n              x: _x,\n              y: _y,\n              color: blended\n            });\n          }\n        }\n\n        if (DEBUG) console.log(colorsToSet);\n\n        var _iterator = _createForOfIteratorHelper(colorsToSet),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var c = _step.value;\n            pixelData.data[c.y * pixelData.width + c.x] = c.color;\n          } // put the data back\n\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        localCtx.putImageData(imageData, 0, 0);\n      }\n    }\n\n    var ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = false;\n\n    var mouseDown = function mouseDown(ev) {\n      if (ev.button === 0) {\n        mouse.current.down = true;\n        mouse.current.justClicked = true;\n      }\n\n      return false;\n    };\n\n    var mouseMove = function mouseMove(ev) {\n      if (!mouse.current.down) {\n        mouse.current.lastX = mouse.current.x;\n        mouse.current.lastY = mouse.current.y;\n      }\n\n      mouse.current.x = ev.offsetX;\n      mouse.current.y = ev.offsetY;\n    };\n\n    var raf = 0;\n    var saveCanvas = Object(_material_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"debounce\"])(function () {\n      // return;\n      // console.log(bCtx);\n      data.current.entries[data.current.selectedIndex].mapData = canvasBuffer.toDataURL('image/png');\n      setData();\n    }, 200);\n    var canvasBuffer = document.createElement('canvas');\n    canvasBuffer.width = WIDTH;\n    canvasBuffer.height = HEIGHT;\n    var bCtx = canvasBuffer.getContext('2d');\n    bCtx.fillStyle = 'white';\n    bCtx.fillRect(0, 0, canvasBuffer.width, canvasBuffer.height);\n\n    if ((_data$current$entries = data.current.entries[data.current.selectedIndex]) === null || _data$current$entries === void 0 ? void 0 : _data$current$entries.mapData) {\n      var savedImage = new Image();\n\n      savedImage.onload = function () {\n        bCtx.drawImage(savedImage, 0, 0);\n        savedImage.remove();\n      };\n\n      savedImage.src = data.current.entries[data.current.selectedIndex].mapData;\n    } else {\n      saveCanvas();\n    }\n\n    function getToolColor() {\n      if (data.current.tools.selectedTool !== 'eraser') {\n        switch (data.current.tools.brushType) {\n          case \"mountain\":\n            return '#95a5a6';\n\n          case 'water':\n            return '#41658A';\n\n          case 'grass':\n            return '#70A37F';\n\n          case 'sand':\n            return '#debb83';\n\n          case 'dirt':\n            return '#5C4742';\n        }\n      } else {\n        return '#ffffff';\n      }\n    }\n\n    var tick = function tick() {\n      ctx.fillStyle = '#303030';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      ctx.imageSmoothingEnabled = false;\n      bCtx.imageSmoothingEnabled = false;\n\n      var _getCanvasScalar = getCanvasScalar(canvas.width, canvas.height),\n          xOffset = _getCanvasScalar.xOffset,\n          scalar = _getCanvasScalar.scalar,\n          yOffset = _getCanvasScalar.yOffset;\n\n      var getScaledMousePosition = function getScaledMousePosition(x, y) {\n        return {\n          x: (x - xOffset) / scalar,\n          y: (y - yOffset) / scalar\n        };\n      };\n\n      if (data.current.tools.selectedTool === 'fill') {\n        if (mouse.current.justClicked) {\n          var mousePos = getScaledMousePosition(mouse.current.x, mouse.current.y);\n          var color = getToolColor().substring(1);\n          color = 'ff' + color.substring(4, 6) + color.substring(2, 4) + color.substring(0, 2);\n          floodFill(bCtx, Math.floor(mousePos.x), Math.floor(mousePos.y), parseInt(color, 16));\n          saveCanvas();\n        }\n      } else {\n        if (mouse.current.down) {\n          var prevMousePos = getScaledMousePosition(mouse.current.lastX, mouse.current.lastY);\n\n          var _mousePos = getScaledMousePosition(mouse.current.x, mouse.current.y);\n\n          bCtx.strokeStyle = getToolColor();\n          bCtx.beginPath();\n          bCtx.moveTo(prevMousePos.x, prevMousePos.y);\n          mouse.current.lastX = mouse.current.x;\n          mouse.current.lastY = mouse.current.y;\n          bCtx.lineTo(_mousePos.x, _mousePos.y);\n          bCtx.lineWidth = data.current.tools.brushSize / scalar * 2;\n          bCtx.lineCap = 'round'; // bCtx.arc(mouse.current.x, mouse.current.y, data.current.tools.brushSize, 0, Math.PI * 2);\n\n          bCtx.stroke();\n          saveCanvas(); // drawRock(bCtx, mouse.current.x / 8, mouse.current.y / 8);\n        }\n      } // drawRock(ctx, 20, 20);\n\n\n      ctx.drawImage(canvasBuffer, 0, 0, WIDTH, HEIGHT, xOffset, yOffset, WIDTH * scalar, HEIGHT * scalar);\n\n      if (data.current.tools.selectedTool === 'fill') {\n        ctx.beginPath();\n        var offset = 10;\n        ctx.moveTo(mouse.current.x - offset, mouse.current.y - offset);\n        ctx.lineTo(mouse.current.x + offset, mouse.current.y + offset);\n        ctx.moveTo(mouse.current.x + offset, mouse.current.y - offset);\n        ctx.lineTo(mouse.current.x - offset, mouse.current.y + offset);\n        ctx.stroke();\n      } else {\n        ctx.beginPath();\n        ctx.arc(mouse.current.x, mouse.current.y, data.current.tools.brushSize, 0, Math.PI * 2);\n        ctx.stroke();\n      }\n\n      var cursorHidden = mouse.current.x > xOffset && mouse.current.x < xOffset + WIDTH * scalar && mouse.current.y > yOffset && mouse.current.y < yOffset + HEIGHT * scalar;\n      canvas.style.cursor = cursorHidden ? 'none' : 'inherit';\n      mouse.current.justClicked = false;\n      raf = requestAnimationFrame(tick);\n    };\n\n    tick();\n    canvas.addEventListener('mousemove', mouseMove);\n    canvas.addEventListener('mousedown', mouseDown);\n    return function () {\n      canvas.removeEventListener('mousemove', mouseMove);\n      canvas.removeEventListener('mousedown', mouseDown);\n      cancelAnimationFrame(raf);\n      canvasBuffer.remove();\n    };\n  }, [canvas, data.current.selectedIndex]);\n\n  var openMenu = function openMenu(ev) {\n    ev.preventDefault();\n    context.current.setOpen({\n      open: true,\n      x: mouse.current.x + canvas.offsetLeft,\n      y: mouse.current.y + canvas.offsetTop\n    });\n  };\n\n  var mouseUp = function mouseUp() {\n    mouse.current.down = false;\n  };\n\n  var resizeBrush = function resizeBrush(ev) {\n    data.current.tools.brushSize = Math.min(100, Math.max(10, data.current.tools.brushSize + Math.round(ev.deltaY / 20)));\n    setData();\n  };\n\n  var canvasScalar = getCanvasScalar(width, height).scalar;\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(\"canvas\", Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    width: width,\n    height: height,\n    className: classes.canvas\n  }, bind, {\n    onMouseUp: mouseUp,\n    onMouseOut: mouseUp,\n    onContextMenu: openMenu,\n    onWheel: resizeBrush,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 4\n    }\n  })), __jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Paper\"], {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 4\n    }\n  }, __jsx(_material_ui_lab__WEBPACK_IMPORTED_MODULE_5__[\"ToggleButtonGroup\"], {\n    size: \"large\",\n    exclusive: true,\n    orientation: \"vertical\",\n    value: data.current.tools.selectedTool,\n    onChange: function onChange(_, selectedTool) {\n      if (selectedTool !== null) {\n        data.current.tools.selectedTool = selectedTool;\n        setData();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 5\n    }\n  }, __jsx(_material_ui_lab__WEBPACK_IMPORTED_MODULE_5__[\"ToggleButton\"], {\n    value: \"pencil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 6\n    }\n  }, __jsx(_material_ui_icons_CreateOutlined__WEBPACK_IMPORTED_MODULE_6___default.a, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }\n  })), __jsx(_material_ui_lab__WEBPACK_IMPORTED_MODULE_5__[\"ToggleButton\"], {\n    value: \"eraser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 6\n    }\n  }, __jsx(mdi_material_ui_Eraser__WEBPACK_IMPORTED_MODULE_8___default.a, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }\n  })), __jsx(_material_ui_lab__WEBPACK_IMPORTED_MODULE_5__[\"ToggleButton\"], {\n    value: \"fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 6\n    }\n  }, __jsx(_material_ui_icons_FormatColorFillOutlined__WEBPACK_IMPORTED_MODULE_7___default.a, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }\n  })))), __jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Paper\"], {\n    className: classes.scaleIndicator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 4\n    }\n  }, __jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Typography\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 5\n    }\n  }, (tempScale === -1 ? map.feetPerPixel : tempScale).toFixed(2), \" \", map.feetPerPixel === 1 ? 'foot' : 'feet', \" / pixel\"), __jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Slider\"], {\n    className: classes.slider,\n    color: \"secondary\",\n    value: tempScale === -1 ? map.feetPerPixel : tempScale,\n    min: 0.25,\n    max: 3.5,\n    step: 0.25,\n    onChange: function onChange(_, value) {\n      value = value;\n      if (value === 0) return;\n      setTempScale(value);\n    },\n    onChangeCommitted: function onChangeCommitted(_, value) {\n      setTempScale(-1);\n      value = value;\n      if (value === 0) return;\n      map.feetPerPixel = value;\n      setData();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 5\n    }\n  })), tempScale !== -1 && __jsx(\"div\", {\n    className: classes.thirtyFootIndicator,\n    style: {\n      width: 30 * canvasScalar / tempScale\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 25\n    }\n  }, \"30 feet\"), __jsx(ContextMenu, {\n    ref: context,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 4\n    }\n  }));\n}\n\n_s(Canvas, \"m2ZRbOLWGZKwEs0feOHUK9zYgO0=\", false, function () {\n  return [useStyles, _hooks__WEBPACK_IMPORTED_MODULE_3__[\"useRefState\"], _hooks__WEBPACK_IMPORTED_MODULE_3__[\"useMeasure\"]];\n});\n\n_c = Canvas;\nvar ContextMenu = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"forwardRef\"])(_c2 = _s2(function ContextMenu(_ref5, ref) {\n  _s2();\n\n  var classes = _ref5.classes;\n\n  var _useRefState3 = Object(_hooks__WEBPACK_IMPORTED_MODULE_3__[\"useRefState\"])(Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useContext\"])(_pages__WEBPACK_IMPORTED_MODULE_13__[\"UserData\"])),\n      _useRefState4 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_useRefState3, 2),\n      data = _useRefState4[0],\n      setData = _useRefState4[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(data.current.tools.brushSize),\n      size = _useState2[0],\n      setSize = _useState2[1];\n\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    setSize(data.current.tools.brushSize);\n  }, [data.current.tools.brushSize]);\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    open: false,\n    x: 0,\n    y: 0\n  }),\n      open = _useState3[0],\n      setOpen = _useState3[1];\n\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useImperativeHandle\"])(ref, function () {\n    return {\n      setOpen: setOpen\n    };\n  });\n\n  var onClose = function onClose() {\n    return setOpen({\n      x: 0,\n      y: 0,\n      open: false\n    });\n  };\n\n  return __jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Menu\"], {\n    transitionDuration: {\n      exit: 0\n    },\n    keepMounted: true,\n    open: open.open,\n    onClose: onClose,\n    PaperProps: {\n      className: classes.contextMenu\n    },\n    anchorReference: \"anchorPosition\",\n    anchorPosition: {\n      top: open.y,\n      left: open.x\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 3\n    }\n  }, __jsx(_material_ui_lab__WEBPACK_IMPORTED_MODULE_5__[\"ToggleButtonGroup\"], {\n    size: \"large\",\n    exclusive: true,\n    value: data.current.tools.brushType,\n    onChange: function onChange(_, brushType) {\n      if (brushType === null) return;\n      data.current.tools.brushType = brushType;\n      setData();\n      onClose();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 4\n    }\n  }, __jsx(_material_ui_lab__WEBPACK_IMPORTED_MODULE_5__[\"ToggleButton\"], {\n    value: \"mountain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 5\n    }\n  }, __jsx(_material_ui_icons_FilterHdrOutlined__WEBPACK_IMPORTED_MODULE_9___default.a, {\n    htmlColor: \"#95a5a6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 6\n    }\n  })), __jsx(_material_ui_lab__WEBPACK_IMPORTED_MODULE_5__[\"ToggleButton\"], {\n    value: \"water\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 5\n    }\n  }, __jsx(mdi_material_ui_Waves__WEBPACK_IMPORTED_MODULE_11___default.a, {\n    htmlColor: \"#41658A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 6\n    }\n  })), __jsx(_material_ui_lab__WEBPACK_IMPORTED_MODULE_5__[\"ToggleButton\"], {\n    value: \"grass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 5\n    }\n  }, __jsx(mdi_material_ui_Grass__WEBPACK_IMPORTED_MODULE_12___default.a, {\n    htmlColor: \"#70A37F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 6\n    }\n  })), __jsx(_material_ui_lab__WEBPACK_IMPORTED_MODULE_5__[\"ToggleButton\"], {\n    value: \"sand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 5\n    }\n  }, __jsx(_material_ui_icons_BlurOn__WEBPACK_IMPORTED_MODULE_10___default.a, {\n    htmlColor: \"#debb83\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 6\n    }\n  })), __jsx(_material_ui_lab__WEBPACK_IMPORTED_MODULE_5__[\"ToggleButton\"], {\n    value: \"dirt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 5\n    }\n  }, __jsx(_material_ui_icons_BlurOn__WEBPACK_IMPORTED_MODULE_10___default.a, {\n    htmlColor: \"#815348\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 6\n    }\n  }))), __jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"ListItem\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 4\n    }\n  }, __jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"ListItemText\"], {\n    primary: \"Size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 5\n    }\n  }), __jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"ListItemSecondaryAction\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 5\n    }\n  }, size)), __jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Slider\"], {\n    min: 5,\n    color: \"secondary\",\n    value: size,\n    onChange: function onChange(_, newValue) {\n      return setSize(newValue);\n    },\n    onChangeCommitted: function onChangeCommitted(_, brushSize) {\n      data.current.tools.brushSize = brushSize;\n      setData();\n      onClose();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 4\n    }\n  }));\n}, \"QisARbuZbO8TvW6dRreIbmkneXM=\", false, function () {\n  return [_hooks__WEBPACK_IMPORTED_MODULE_3__[\"useRefState\"], react__WEBPACK_IMPORTED_MODULE_2__[\"useImperativeHandle\"]];\n}));\n_c3 = ContextMenu;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Canvas\");\n$RefreshReg$(_c2, \"ContextMenu$forwardRef\");\n$RefreshReg$(_c3, \"ContextMenu\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/Canvas.tsx\n");

/***/ })

})